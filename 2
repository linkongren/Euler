代码 

#include <stdio.h>
 #define max 4000000
 
 
 int main ()
 {
     int ans = 0;
     int b[3] = {0};
     b[1] = b[2] = 1;
     for(int i = 3; ; i++){
         b[i % 3] = b[(i - 1) % 3] + b[(i - 2) % 3];
         if(b[i % 3] > max) break;
         if(b[i % 3] & 1) continue;
         ans += b[i % 3];
     }
     printf("%d\n", ans);
 
 
     return 0;
 }


有一个小发现 虽然好像没有什么用 就随便写写吧

假设有一个斐波那契数列 a1 a2 a3 a4 an
该数列前n项和 fn = a（n + 2）- （a3 - a1）；

再来如果这个数列含有奇数项的话
如果 an 是偶数 那么该数列前n项奇数的和和前n项偶数的和的差是一个常数k
k 值可以由斐波那契数列的前几项算出来
